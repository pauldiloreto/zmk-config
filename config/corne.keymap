/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Definitions

#define DEFAULT 0
#define NAVI 1
#define MEDIA 2
#define NUM 3
#define SYM 4
#define FN 5

/ {
    //  Homerow mod held behaviour 

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        tda: tap_dance_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_A";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp a>,
                <&kp LEFT_COMMAND>;
        };
        tdb: tap_dance_b {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_B";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp b>,
                <&kp RIGHT_COMMAND>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        sticky_layer_2 {
            bindings = <&sl 2>;
            key-positions = <38 37>;
        };

        sticky_layer_5 {
            bindings = <&sl 5>;
            key-positions = <39 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &none   &kp Q           &kp W               &kp E             &kp R                     &kp T        &kp Y              &kp U                &kp I            &kp O      &kp P   &none
  &none    &tda  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &hm LG(LA(LC(LSHIFT))) G        &kp H  &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_ALT L       &tdb   &none
  &none   &kp Z           &kp X               &kp C             &kp V      &hm LA(LC(LSHIFT)) B        &kp N              &kp M            &kp COMMA          &kp DOT  &kp SLASH   &none
                                              &none       &lt 1 SPACE                 &lt 3 TAB  &lt 4 ENTER         &lt 3 BSPC                &none
            >;
        };

        navigation {
            bindings = <
  &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &none      &none     &none   &none      &none   &none   &none
  &none     &none     &none   &none      &none   &none   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &none   &none
  &none     &none     &none   &none      &none   &none      &none     &none   &none      &none   &none   &none
                              &none      &none   &none  &kp ENTER   &kp DEL   &none
            >;
        };

        media {
            bindings = <
  &none    &bt BT_CLR         &none         &none         &none         &none             &none       &none         &none         &none       &none   &none
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &none  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT   &none
  &none         &none         &none         &none         &none         &none             &none       &none         &none         &none       &none   &none
                                            &none         &none         &none  &kp C_PLAY_PAUSE  &kp C_MUTE         &none
            >;
        };

        numbers {
            bindings = <
  &none   &kp LBKT  &kp N7  &kp N8  &kp N9   &kp RBKT   &none   &none   &none    &none   &none   &none
  &none   &kp SEMI  &kp N4  &kp N5  &kp N6  &kp EQUAL   &none   &none   &none    &none   &none   &none
  &none  &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH   &none   &none   &none  &kp DOT   &none   &none
                             &none  &kp N0  &kp MINUS   &none   &none   &none
            >;
        };

        symbols {
            bindings = <
  &none   &kp LBRC  &kp AMPS   &kp STAR   &kp LPAR        &kp RBRC   &none   &none   &none   &none   &none   &none
  &none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET        &kp PLUS   &none   &none   &none   &none   &none   &none
  &none  &kp TILDE  &kp EXCL     &kp AT   &kp HASH        &kp PIPE   &none   &none   &none   &none   &none   &none
                                  &none   &kp RPAR  &kp UNDERSCORE   &none   &none   &none
            >;
        };

        function_keys {
            bindings = <
  &none   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &none   &none   &none   &none   &none   &none
  &none   &kp F6   &kp F7   &kp F8   &kp F9  &kp F10   &none   &none   &none   &none   &none   &none
  &none  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15   &none   &none   &none   &none   &none   &none
                             &none    &none    &none   &none   &none   &none
            >;
        };
    };
};
