#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT 0
#define NAVI 1
#define MEDIA 2
#define NUM 3
#define SYM 4
#define FN 5

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };
};

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

/ {
    behaviors {
        hml: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings =
                <&kp>,
                <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 6 7 8 9 10 13 15 16 18 19 20 21 22 25 26 27 28 30 31 32 33 34 36 37 38 39 40 41>;
        };
        hmr: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings =
                <&kp>,
                <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 19 20 21 22 25 26 27 28 29 36 37 38 39 40 41>;
        };
        smr: shift_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_escape {
            timeout-ms = <50>;
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        caps_word {
            timeout-ms = <50>;
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <                
                 &none &kp Q              &kp W                  &kp E                &kp R      &kp T        &kp Y                 &kp U                   &kp I               &kp O                            &kp P  &none
 &none  &hml LEFT_COMMAND A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &smr LEFT_SHIFT F      &kp G        &kp H  &smr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_COMMAND APOSTROPHE  &none
                 &none  &kp Z              &mt LEFT_COMMAND X                  &mt LA(LC(LSHIFT)) C                &kp V      &kp B        &kp N                 &kp M               &kp COMMA             &kp DOT                        &kp SLASH  &none
                                                                          &lt 2 ESC  &lt 1 SPACE  &lt 3 TAB  &lt 4 ENTER        &lt 3 BSPC  &lt 5 ESC
            >;
        };

        navigation {
            bindings = <
      &none  &kp LEFT      &kp DOWN            &kp UP       &kp RIGHT   &none      &none  &kp LC(LS(TAB))  &kp LC(TAB)      &none   &none  &none
 &none  &kp LEFT_META  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT   &none   &kp LEFT   &kp DOWN        &kp UP  &kp RIGHT   &none &none
         &none  &none         &none             &none           &none   &none      &none      &none         &none      &none   &none  &none
                                                         &none  &none   &none  &kp ENTER    &kp DEL  &none
            >;
        };

        media {
            bindings = <
   &none  &bt BT_CLR         &none         &none         &none         &none             &none       &none         &none         &none       &none  &none
 &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &none  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none
        &none  &none         &none         &none         &none         &none             &none       &none         &none         &none       &none  &none
                                                  &none  &none         &none  &kp C_PLAY_PAUSE  &kp C_MUTE  &none
            >;
        };

        numbers {
            bindings = <
  &none  &kp LBKT  &kp N7  &kp N8  &kp N9   &kp RBKT   &none            &none              &none          &none           &none  &none
  &none  &kp SEMI  &kp N4  &kp N5  &kp N6  &kp EQUAL   &none  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_META  &none
 &none  &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH   &none            &none              &none        &kp DOT           &kp SLASH  &none
                            &none  &kp N0  &kp MINUS   &none            &none  &none
            >;
        };

        symbols {
            bindings = <
  &none  &kp LBRC  &kp AMPS   &kp STAR   &kp LPAR        &kp RBRC   &none   &none   &none   &none   &none  &none
 &none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET        &kp PLUS   &none   &none   &none   &none   &none  &none
 &none  &kp TILDE  &kp EXCL     &kp AT   &kp HASH        &kp PIPE   &none   &none   &none   &none   &none  &none
                                  &none  &kp RPAR  &kp UNDERSCORE   &none   &none  &none
            >;
        };

        function_keys {
            bindings = <
  &none  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &none   &none   &none   &none   &none  &none
  &none  &kp F6   &kp F7   &kp F8   &kp F9  &kp F10   &none   &none   &none   &none   &none  &none
 &none  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15   &none   &none   &none   &none   &none  &none
                              &none  &none    &none   &none   &none  &none
            >;
        };
    };
};
